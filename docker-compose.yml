services:
  # MongoDB Service
  mongodb:
    image: mongo:latest
    container_name: file-service-mongodb
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: file-storage-service
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - mongo_init_scripts:/docker-entrypoint-initdb.d
    networks:
      - file-service-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # MongoDB Express Service (Admin UI)
  mongo-express:
    image: mongo-express:latest
    container_name: file-service-mongo-express
    restart: always
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: password
      ME_CONFIG_MONGODB_URL: mongodb://admin:password@mongodb:27017/?authSource=admin
    depends_on:
      - mongodb
    networks:
      - file-service-network

  # File Service Application
  file-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: file-service-app
    restart: always
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - MONGODB_URI=mongodb://admin:password@mongodb:27017/file-storage-service?authSource=admin
      - MONGODB_DB_NAME=file-storage-service
      - JWT_SECRET=your-super-secret-jwt-key-change-this-in-production
      - STORAGE_PROVIDER=local
      - LOCAL_STORAGE_PATH=/app/storage
      - LOCAL_THUMBNAILS_PATH=/app/storage/thumbnails
      - MAX_FILE_SIZE=100MB
    volumes:
      - file_storage:/app/storage
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - file-service-network

volumes:
  mongodb_data:
    driver: local
  file_storage:
    driver: local
  mongo_init_scripts:
    driver: local

networks:
  file-service-network:
    driver: bridge
